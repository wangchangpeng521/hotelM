<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.RoomStatusMapper">
  <resultMap id="BaseResultMap" type="com.pojo.RoomStatus">
    <id column="sid" jdbcType="BIGINT" property="sid" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="isLive" jdbcType="INTEGER" property="islive" />
    <result column="isClean" jdbcType="INTEGER" property="isclean" />
    <result column="isPay" jdbcType="INTEGER" property="ispay" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="rid" jdbcType="INTEGER" property="rid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sid, image, isLive, isClean, isPay, remark, rid
  </sql>
  <select id="selectByExample" parameterType="com.pojo.RoomStatusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roomstatus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roomstatus
    where sid = #{sid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from roomstatus
    where sid = #{sid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.RoomStatusExample">
    delete from roomstatus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.RoomStatus">
    insert into roomstatus (sid, image, isLive, 
      isClean, isPay, remark, 
      rid)
    values (#{sid,jdbcType=BIGINT}, #{image,jdbcType=VARCHAR}, #{islive,jdbcType=INTEGER}, 
      #{isclean,jdbcType=INTEGER}, #{ispay,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{rid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.RoomStatus">
    insert into roomstatus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="islive != null">
        isLive,
      </if>
      <if test="isclean != null">
        isClean,
      </if>
      <if test="ispay != null">
        isPay,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="rid != null">
        rid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=BIGINT},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="islive != null">
        #{islive,jdbcType=INTEGER},
      </if>
      <if test="isclean != null">
        #{isclean,jdbcType=INTEGER},
      </if>
      <if test="ispay != null">
        #{ispay,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.RoomStatusExample" resultType="java.lang.Long">
    select count(*) from roomstatus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update roomstatus
    <set>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=BIGINT},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.islive != null">
        isLive = #{record.islive,jdbcType=INTEGER},
      </if>
      <if test="record.isclean != null">
        isClean = #{record.isclean,jdbcType=INTEGER},
      </if>
      <if test="record.ispay != null">
        isPay = #{record.ispay,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update roomstatus
    set sid = #{record.sid,jdbcType=BIGINT},
      image = #{record.image,jdbcType=VARCHAR},
      isLive = #{record.islive,jdbcType=INTEGER},
      isClean = #{record.isclean,jdbcType=INTEGER},
      isPay = #{record.ispay,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      rid = #{record.rid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.RoomStatus">
    update roomstatus
    <set>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="islive != null">
        isLive = #{islive,jdbcType=INTEGER},
      </if>
      <if test="isclean != null">
        isClean = #{isclean,jdbcType=INTEGER},
      </if>
      <if test="ispay != null">
        isPay = #{ispay,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rid != null">
        rid = #{rid,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.RoomStatus">
    update roomstatus
    set image = #{image,jdbcType=VARCHAR},
      isLive = #{islive,jdbcType=INTEGER},
      isClean = #{isclean,jdbcType=INTEGER},
      isPay = #{ispay,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      rid = #{rid,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=BIGINT}
  </update>


</mapper>